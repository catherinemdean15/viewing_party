---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=true&page=1&query=Nacho
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 06 Feb 2021 22:51:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 7430e08fa3a2805900950baba5038605.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAH50-C4
      X-Amz-Cf-Id:
      - R4-oG228iXhuu2UiK4K4a5GWCxHmHHldxZFPFNEoGJiZm9qd46KRyg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 06 Feb 2021 22:51:07 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_API_KEY>&include_adult=true&page=2&query=Nacho
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 06 Feb 2021 22:51:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 115c7d901fcc7bb17cbb373a1d33eb0b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - IAH50-C4
      X-Amz-Cf-Id:
      - H5u9NZZ6oXLHAVZV6tfe-4bs8wTeI7kB7c9xO7GRzaDEvurt3d5DzQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 06 Feb 2021 22:51:07 GMT
recorded_with: VCR 6.0.0
